{"version":3,"sources":["webpack:///dist/bundle.min.js","webpack:///webpack/bootstrap 57569cde7af448f6620f","webpack:///./src/gate/exports.js","webpack:///(webpack)/~/node-libs-browser/~/os-browserify/browser.js","webpack:///./src/gate/arrayBufferToBase64.js","webpack:///./src/gate/index.js","webpack:///external \"crypto\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","previousUserGate","window","UserGate","gate","noConflict","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","i","byteLength","String","fromCharCode","btoa","encodedGate","options","this","_list","list","_sample","sample","_sampleCharacterSet","sampleCharacterSet","crypto","os","IS_BROWSER","Object","assign","prototype","allows","user","self","Promise","resolve","reject","all","_matchesList","_matchesSample","then","matches","some","match","TextEncoder","encode","subtle","digest","createHash","update","hash","base64User","anyUserMatches","indexOf","effectiveCharacterSet","slice","Math","round","length","userMatches","RegExp","test"],"mappings":"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","file":"./dist/bundle.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// TODO(jeff): Figure out how to produce a UMD module.\n\t/* global require:false */\n\t(function() {\n\t  var previousUserGate = window.UserGate;\n\t\n\t  var gate = __webpack_require__(3);\n\t  window.UserGate = gate;\n\t  window.UserGate.noConflict = function() {\n\t    window.UserGate = previousUserGate;\n\t    return gate;\n\t  };\n\t})();\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\texports.endianness = function () { return 'LE' };\n\t\n\texports.hostname = function () {\n\t    if (typeof location !== 'undefined') {\n\t        return location.hostname\n\t    }\n\t    else return '';\n\t};\n\t\n\texports.loadavg = function () { return [] };\n\t\n\texports.uptime = function () { return 0 };\n\t\n\texports.freemem = function () {\n\t    return Number.MAX_VALUE;\n\t};\n\t\n\texports.totalmem = function () {\n\t    return Number.MAX_VALUE;\n\t};\n\t\n\texports.cpus = function () { return [] };\n\t\n\texports.type = function () { return 'Browser' };\n\t\n\texports.release = function () {\n\t    if (typeof navigator !== 'undefined') {\n\t        return navigator.appVersion;\n\t    }\n\t    return '';\n\t};\n\t\n\texports.networkInterfaces\n\t= exports.getNetworkInterfaces\n\t= function () { return {} };\n\t\n\texports.arch = function () { return 'javascript' };\n\t\n\texports.platform = function () { return 'browser' };\n\t\n\texports.tmpdir = exports.tmpDir = function () {\n\t    return '/tmp';\n\t};\n\t\n\texports.EOL = '\\n';\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/* global module:false */\n\t\n\t// http://stackoverflow.com/a/9458996/495611\n\tfunction arrayBufferToBase64(buffer) {\n\t  var binary = '';\n\t  var bytes = new Uint8Array(buffer);\n\t  for (var i = 0; i < bytes.byteLength; i++) {\n\t    binary += String.fromCharCode(bytes[i]);\n\t  }\n\t  return btoa(binary);\n\t}\n\t\n\tmodule.exports = arrayBufferToBase64;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar os = __webpack_require__(1);\n\t\n\t// Webpack adds a shim for `os.platform` that returns this value.\n\tvar IS_BROWSER = os.platform() === 'browser';\n\t\n\tvar arrayBufferToBase64, crypto;\n\tif (IS_BROWSER) {\n\t  arrayBufferToBase64 = __webpack_require__(2);\n\t  crypto = window.crypto;\n\t} else {\n\t  crypto = __webpack_require__(4);\n\t}\n\t\n\t/**\n\t * Deserializes a user gate and checks users against the gate.\n\t *\n\t * This is a constructor, and must be called with `new`.\n\t *\n\t * @param {Object} encodedGate - JSON produced by `UserGateEncoder`.\n\t * @param {Object=} options\n\t *   @property {String=} _sampleCharacterSet_: The string of characters with which the unencoded\n\t *     user identifiers could begin. Defaults to `'abcdefghijklmnopqrstuvwxyz'` which works for\n\t *     identifiers that are emails. Case-insensitive. See `UserGate#allows` for how this is used.\n\t */\n\tfunction UserGate(encodedGate, options) {\n\t  encodedGate = encodedGate || {};\n\t  this._list = encodedGate.list;\n\t  this._sample = encodedGate.sample;\n\t\n\t  options = options || {};\n\t  this._sampleCharacterSet = options.sampleCharacterSet || 'abcdefghijklmnopqrstuvwxyz';\n\t}\n\t\n\tObject.assign(UserGate.prototype, {\n\t  /**\n\t   * Checks whether _user_ (a string identifier similar to those encoded) is allowed\n\t   * through the gate, either because:\n\t   *\n\t   * - they're on the list\n\t   * - they're part of the first _sample_ users\n\t   *\n\t   * Sampling is done by checking the character with which _user_ begins. For example,\n\t   * if _sample_ is `0.5` and the gate uses the default _sampleCharacterSet_, _user_ would be\n\t   * allowed through the gate if it began with any character between `a-n` (halfway through\n\t   * the alphabet).\n\t   *\n\t   * Users are unlikely to be uniformly distributed over _sampleCharacterSet_ and\n\t   * thus a _sample_ of `0.5` won't exactly select for 50% of users. However, this\n\t   * sampling technique is deterministic: a user will either always be allowed through\n\t   * the gate, even if they reload, or they never will.\n\t   *\n\t   * Checking against the list requires an exact match. However, sampling is\n\t   * case-insensitive.\n\t   *\n\t   * @param {String} user\n\t   *\n\t   * @return {Promise} Resolves to `true` if _user_ is allowed through the gate, `false` otherwise.\n\t   */\n\t  allows: function(user) {\n\t    var self = this;\n\t\n\t    return new Promise(function(resolve, reject) {\n\t      // We would ideally race *for the first promise to resolve to `true`*, but I can't think of\n\t      // how to do that elegantly.\n\t      Promise.all([ self._matchesList(user), self._matchesSample(user) ])\n\t        .then(function(matches) {\n\t          resolve(matches.some(function(match) {\n\t            return match;\n\t          }));\n\t        })\n\t        .catch(reject);\n\t    });\n\t  },\n\t\n\t  _matchesList: function(user) {\n\t    var self = this;\n\t\n\t    return new Promise(function(resolve, reject) {\n\t      if (!self._list) {\n\t        resolve(false);\n\t        return;\n\t      }\n\t\n\t      Promise.resolve()\n\t        .then(function() {\n\t          if (IS_BROWSER) {\n\t            var buffer = new TextEncoder('utf-8').encode(user);\n\t            return crypto.subtle.digest('SHA-256', buffer);\n\t          } else {\n\t            return crypto.createHash('sha256').update(user);\n\t          }\n\t        })\n\t        .then(function(hash) {\n\t          if (IS_BROWSER) {\n\t            return arrayBufferToBase64(hash);\n\t          } else {\n\t            return hash.digest('base64');\n\t          }\n\t        })\n\t        .then(function(base64User) {\n\t          var anyUserMatches = self._list.indexOf(base64User) > -1;\n\t          resolve(anyUserMatches);\n\t        })\n\t        .catch(reject);\n\t    });\n\t  },\n\t\n\t  _matchesSample: function(user) {\n\t    var self = this;\n\t\n\t    return new Promise(function(resolve) {\n\t      if (!self._sample) {\n\t        resolve(false);\n\t        return;\n\t      }\n\t\n\t      // See if the user begins with a character in the sample set.\n\t      var effectiveCharacterSet = self._sampleCharacterSet.slice(\n\t        0, Math.round(self._sampleCharacterSet.length * self._sample));\n\t\n\t      var userMatches = new RegExp('^[' + effectiveCharacterSet + ']', 'i').test(user);\n\t      resolve(userMatches);\n\t    });\n\t  }\n\t});\n\t\n\tmodule.exports = UserGate;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = crypto;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** dist/bundle.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 57569cde7af448f6620f\n **/","// TODO(jeff): Figure out how to produce a UMD module.\n/* global require:false */\n(function() {\n  var previousUserGate = window.UserGate;\n\n  var gate = require('.');\n  window.UserGate = gate;\n  window.UserGate.noConflict = function() {\n    window.UserGate = previousUserGate;\n    return gate;\n  };\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/gate/exports.js\n ** module id = 0\n ** module chunks = 0\n **/","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/os-browserify/browser.js\n ** module id = 1\n ** module chunks = 0\n **/","/* global module:false */\n\n// http://stackoverflow.com/a/9458996/495611\nfunction arrayBufferToBase64(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  for (var i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n\nmodule.exports = arrayBufferToBase64;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/gate/arrayBufferToBase64.js\n ** module id = 2\n ** module chunks = 0\n **/","var os = require('os');\n\n// Webpack adds a shim for `os.platform` that returns this value.\nvar IS_BROWSER = os.platform() === 'browser';\n\nvar arrayBufferToBase64, crypto;\nif (IS_BROWSER) {\n  arrayBufferToBase64 = require('./arrayBufferToBase64');\n  crypto = window.crypto;\n} else {\n  crypto = require('crypto');\n}\n\n/**\n * Deserializes a user gate and checks users against the gate.\n *\n * This is a constructor, and must be called with `new`.\n *\n * @param {Object} encodedGate - JSON produced by `UserGateEncoder`.\n * @param {Object=} options\n *   @property {String=} _sampleCharacterSet_: The string of characters with which the unencoded\n *     user identifiers could begin. Defaults to `'abcdefghijklmnopqrstuvwxyz'` which works for\n *     identifiers that are emails. Case-insensitive. See `UserGate#allows` for how this is used.\n */\nfunction UserGate(encodedGate, options) {\n  encodedGate = encodedGate || {};\n  this._list = encodedGate.list;\n  this._sample = encodedGate.sample;\n\n  options = options || {};\n  this._sampleCharacterSet = options.sampleCharacterSet || 'abcdefghijklmnopqrstuvwxyz';\n}\n\nObject.assign(UserGate.prototype, {\n  /**\n   * Checks whether _user_ (a string identifier similar to those encoded) is allowed\n   * through the gate, either because:\n   *\n   * - they're on the list\n   * - they're part of the first _sample_ users\n   *\n   * Sampling is done by checking the character with which _user_ begins. For example,\n   * if _sample_ is `0.5` and the gate uses the default _sampleCharacterSet_, _user_ would be\n   * allowed through the gate if it began with any character between `a-n` (halfway through\n   * the alphabet).\n   *\n   * Users are unlikely to be uniformly distributed over _sampleCharacterSet_ and\n   * thus a _sample_ of `0.5` won't exactly select for 50% of users. However, this\n   * sampling technique is deterministic: a user will either always be allowed through\n   * the gate, even if they reload, or they never will.\n   *\n   * Checking against the list requires an exact match. However, sampling is\n   * case-insensitive.\n   *\n   * @param {String} user\n   *\n   * @return {Promise} Resolves to `true` if _user_ is allowed through the gate, `false` otherwise.\n   */\n  allows: function(user) {\n    var self = this;\n\n    return new Promise(function(resolve, reject) {\n      // We would ideally race *for the first promise to resolve to `true`*, but I can't think of\n      // how to do that elegantly.\n      Promise.all([ self._matchesList(user), self._matchesSample(user) ])\n        .then(function(matches) {\n          resolve(matches.some(function(match) {\n            return match;\n          }));\n        })\n        .catch(reject);\n    });\n  },\n\n  _matchesList: function(user) {\n    var self = this;\n\n    return new Promise(function(resolve, reject) {\n      if (!self._list) {\n        resolve(false);\n        return;\n      }\n\n      Promise.resolve()\n        .then(function() {\n          if (IS_BROWSER) {\n            var buffer = new TextEncoder('utf-8').encode(user);\n            return crypto.subtle.digest('SHA-256', buffer);\n          } else {\n            return crypto.createHash('sha256').update(user);\n          }\n        })\n        .then(function(hash) {\n          if (IS_BROWSER) {\n            return arrayBufferToBase64(hash);\n          } else {\n            return hash.digest('base64');\n          }\n        })\n        .then(function(base64User) {\n          var anyUserMatches = self._list.indexOf(base64User) > -1;\n          resolve(anyUserMatches);\n        })\n        .catch(reject);\n    });\n  },\n\n  _matchesSample: function(user) {\n    var self = this;\n\n    return new Promise(function(resolve) {\n      if (!self._sample) {\n        resolve(false);\n        return;\n      }\n\n      // See if the user begins with a character in the sample set.\n      var effectiveCharacterSet = self._sampleCharacterSet.slice(\n        0, Math.round(self._sampleCharacterSet.length * self._sample));\n\n      var userMatches = new RegExp('^[' + effectiveCharacterSet + ']', 'i').test(user);\n      resolve(userMatches);\n    });\n  }\n});\n\nmodule.exports = UserGate;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/gate/index.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = crypto;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"crypto\"\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}